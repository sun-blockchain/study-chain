version: 2
jobs:
  build:
    working_directory: ~/server
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "server/package.json" }}
      - run:
          name: Install npm
          command: cd server && npm install
      - run: mkdir reports
      - run:
          name: npm test
          command: cd server && ./node_modules/.bin/nyc ./node_modules/.bin/mocha --recursive --timeout=5000 --exit
          when: always
      - run:
          name: code-coverage
          command: cd server && ./node_modules/.bin/nyc report --reporter=text-lcov > coverage/lcov.info
          when: always
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports/mocha/test-results.xml
      - store_artifacts:
          path: /coverage/lcov.info
      - run:
          name: Sending notification
          when: on_success
          command: |
            if [[ true ]];  then
              curl -X POST -H "X-ChatWorkToken: $CHATWORK_TOKEN" -d \
                "body=[info][title][info]BUIL SUCCESS (flex)[/info] $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME[/title]Repository name: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME%0AAuthor: $CIRCLE_PR_USERNAME%0ABranch: $CIRCLE_BRANCH%0APull: $CIRCLE_PULL_REQUEST%0ACommit: https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1%0ABuild link: https://circleci.com/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM[/info]" \
                "https://api.chatwork.com/v2/rooms/$CHATWORK_ROOM/messages"
            fi
      - run:
          name: Sending notification
          when: on_fail
          command: |
            if [[ true ]];  then
              curl -X POST -H "X-ChatWorkToken: $CHATWORK_TOKEN" -d \
                "body=[info][title][info]BUIL FAILED (anger)[/info]$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME[/title]Repository name: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME%0AAuthor: $CIRCLE_PR_USERNAME%0ABranch: $CIRCLE_BRANCH%0APull: $CIRCLE_PULL_REQUEST%0ACommit: https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1%0ABuild link: https://circleci.com/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM[/info]" \
                "https://api.chatwork.com/v2/rooms/$CHATWORK_ROOM/messages"
            fi
      - save_cache:
          key: dependency-cache-{{ checksum "server/package.json" }}
          paths:
            - node_modules
  up_network:
    machine:
      enabled: true
    steps:
      - run:
          name: Up network
          command: |
            ssh ${USER}@${HOST} "export GOPATH=/home/deploy/go && cd test/study-chain && git checkout master && git branch -D release && git checkout -b release && git pull tan release && cd network && echo -ne '\n' | ./network.sh down && echo -ne '\n' | ./network.sh up"
  start_server:
    machine:
      enabled: true
    steps:
      - run:
          name: Drop Database
          command: |
            ssh ${USER}@${HOST} "mongo studychain --eval 'printjson(db.dropDatabase())'"
      - run:
          name: Yarn Installl Server
          command: |
            ssh ${USER}@${HOST} "cd test/study-chain/server && yarn install && cd cli && rm -r wallet && ./init.sh && cd .. && pm2 restart www"
  run_client:
    machine:
      enabled: true
    steps:
      - run:
          name: Run client
          command: |
            ssh ${USER}@${HOST} "cd test/study-chain/client && rm -r dist && yarn build"
workflows:
  version: 2
  build-and-up_network:
    jobs:
      - build
      - up_network:
          requires:
            - build
      - start_server:
          requires:
            - up_network
      - run_client:
          requires:
            - start_server
